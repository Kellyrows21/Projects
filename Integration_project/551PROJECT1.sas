/********************************
 * NAME : KELLY ADU - GYAMFI    *
 * STA 551 PROJECT 1            *
 * PURPOSE :                    *
 * DUE DATE : SEPTEMBER 17, 2025*
*********************************/



/*IMPORTING ALL 4 DATASETS*/

LIBNAME PRO1 "\\apporto.com\dfs\WCUPA\Users\1052757_wcupa\Desktop\551\LECTURE 3";
PROC IMPORT DATAFILE = "\\apporto.com\dfs\WCUPA\Users\1052757_wcupa\Desktop\551\LECTURE 3\EDUCATION.CSV"
OUT = PRO1.EDUCATION
DBMS = CSV
REPLACE;
GETNAMES = YES;
RUN;

PROC IMPORT DATAFILE = "\\apporto.com\dfs\WCUPA\Users\1052757_wcupa\Desktop\551\LECTURE 3\countypresidential_election_2000-2020.CSV"
OUT = PRO1.ELECTION_DATA
DBMS = CSV
REPLACE;
GETNAMES = YES;
RUN;

PROC IMPORT DATAFILE = "\\apporto.com\dfs\WCUPA\Users\1052757_wcupa\Desktop\551\LECTURE 3\PovertyEstimates.CSV"
OUT = PRO1.PovertyEstimates
DBMS = CSV
REPLACE;
GETNAMES = YES;
RUN;

PROC IMPORT DATAFILE = "\\apporto.com\dfs\WCUPA\Users\1052757_wcupa\Desktop\551\LECTURE 3\UNEMPLOYMENT.CSV"
OUT = PRO1.UNEMPLOYMENT 
DBMS = CSV
REPLACE;
GETNAMES = YES;
RUN;


PROC CONTENTS DATA = PRO1.ELECTION_DATA;
RUN;

/*WORKING ON THE INSTRUCTION FOR THE ELECTION DATA*/
PROC SQL;
CREATE TABLE ELECTION_2020 AS 
SELECT  COUNTY_FIPS,
        STATE,
        COUNTY_NAME AS COUNTY,
        PARTY,
        CANDIDATEVOTES
FROM PRO1.ELECTION_DATA
WHERE YEAR = 2020
AND (PARTY="DEMOCRAT" OR PARTY="REPUBLICAN");
QUIT;

PROC SQL;
CREATE TABLE ELECTION_VOTES AS 
SELECT COUNTY_FIPS,
       STATE,
	   COUNTY,
	   PARTY AS WINNING_PARTY,
	   SUM(CANDIDATEVOTES) AS TOTAL_VOTES
FROM ELECTION_2020
GROUP BY COUNTY_FIPS, STATE, COUNTY, PARTY;
QUIT;

PROC SQL;
CREATE TABLE ELECTION_CLEAN AS 
SELECT A.COUNTY_FIPS,
       A.STATE,
	   A.COUNTY,
	   A.WINNING_PARTY,
	   A.TOTAL_VOTES
FROM ELECTION_VOTES AS A
WHERE A.TOTAL_VOTES = (SELECT MAX(B.TOTAL_VOTES)
FROM ELECTION_VOTES AS B 
WHERE A.COUNTY_FIPS = B.COUNTY_FIPS);
QUIT;

/*WORKING ON THE INSTRUCTION FOR THE UNEMPLOYMENT DATA*/
PROC SQL;
CREATE TABLE UNEMPLOYED_CLEAN AS
SELECT FIPS_CODE AS COUNTY_FIPS,
       STATE,
	   AREA_NAME,
	   SCAN(ATTRIBUTE, 1,'_') AS INDICATOR,
	   INPUT(SCAN(ATTRIBUTE, -1, '_') , 4.) AS YEAR,
	   VALUE
	FROM PRO1.UNEMPLOYMENT;
QUIT;

PROC SQL;
CREATE TABLE UNEMPLOYMENT_RATE_2020 AS
SELECT COUNTY_FIPS,
       STATE,
	   AREA_NAME,
	   VALUE AS UNWMPLOYMENT_RATE
  FROM UNEMPLOYED_CLEAN
  WHERE UPCASE(INDICATOR) = "UNEMPLOYMENT"
  AND YEAR = 2020 ;
  QUIT;

/*WORKING ON THE INSTRUCTION FOR THE POVERTY DATA*/
PROC SQL;
CREATE TABLE POVERTY_CLEAN AS
SELECT FIPSTXT AS COUNTY_FIPS,
       STABR AS STATE,
	   AREA_NAME,
	   SUBSTR(ATTRIBUTE, 1, FIND(ATTRIBUTE, '_', -LENGTH(ATTRIBUTE)) -1) AS INDICATOR,
	   SUBSTR(ATTRIBUTE, FIND(ATTRIBUTE, '_', -LENGTH(ATTRIBUTE)) +1) AS YEAR,
	   VALUE 
FROM PRO1.PovertyEstimates;
QUIT;
PROC SQL;
CREATE TABLE POVERTY_2019 AS
SELECT COUNTY_FIPS,
       STATE,
	   AREA_NAME,
	   VALUE AS PCTPOVALL_2019
  FROM POVERTY_CLEAN
  WHERE UPCASE(INDICATOR) = "PCTPOVALL"
  AND INPUT(YEAR,4.) = 2019;
  QUIT;


/*WORKING ON THE INSTRUCTION FOR THE EDUCATION DATA*/
/*PROC SQL;
CREATE TABLE EDUC_CLEAN AS 
SELECT ;
QUIT;*/
